service cloud.firestore {
  match /databases/{database}/documents {

	function UserSignedIn() {
		return request.auth.uid != null;
	}

	function UserVerified() {
		return request.auth.uid != null && (exists(/databases/$(database)/documents/Clearance/$(request.auth.uid)) || false);
	}

	function UserClearance() {
		return Number(
			get(/Clearance/$(request.auth.uid)).a || 
			get(/Clearance/$(request.auth.uid)).data.a) 
		|| 0;
	}

	match /Notifications/{notification} {
		allow read: if UserVerified();
		allow write: if UserVerified();
		allow delete: if false;
	}

	match /SS/{user} {
		allow read: if true;
		allow write: if true;
		allow delete: if false;
	}

	match /Teams/{team} {
		allow read: if UserVerified();
		allow update: if UserVerified();
		allow delete: if UserVerified();
	}

	match /Todo/{ftg} {
		allow read: if UserVerified();
		allow write: if UserVerified();
	}

	match /users/{user} {
		allow read: if true;
		allow write: if UserSignedIn();
		allow delete: if UserVerified();
	}

	match /Clearance/{user} {
		allow read: if UserSignedIn();
		allow create: if UserVerified();
		allow update: if UserVerified();
		allow delete: if false;
	}

	match /Manuals/{fm} {
		allow read: if UserVerified();
		allow write: if UserVerified();
	}

	match /Parts/{fig} {
		allow read: if UserVerified();
		allow write: if UserVerified();
	}

	match /Helper/{user} {
		allow read: if UserVerified();
		allow write: if UserVerified();
	}
  }
}
